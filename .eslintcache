[{"/home/pedrobraga/Projetos/nfefront/src/index.js":"1","/home/pedrobraga/Projetos/nfefront/src/App.js":"2","/home/pedrobraga/Projetos/nfefront/src/reportWebVitals.js":"3","/home/pedrobraga/Projetos/nfefront/src/AppRouter.js":"4","/home/pedrobraga/Projetos/nfefront/src/Menu/MenuUser.js":"5","/home/pedrobraga/Projetos/nfefront/src/Menu/MenuAdmin.js":"6","/home/pedrobraga/Projetos/nfefront/src/Components/NFE/FormNFE.js":"7","/home/pedrobraga/Projetos/nfefront/src/Components/Login/LoginComponent.js":"8","/home/pedrobraga/Projetos/nfefront/src/Components/NFE/NFEList.js":"9","/home/pedrobraga/Projetos/nfefront/src/Components/User/UserEdit.js":"10","/home/pedrobraga/Projetos/nfefront/src/Components/User/User.js":"11","/home/pedrobraga/Projetos/nfefront/src/Components/NFE/NFEListAdmin.js":"12","/home/pedrobraga/Projetos/nfefront/src/Components/User/UserList.js":"13","/home/pedrobraga/Projetos/nfefront/src/Components/Header.js":"14","/home/pedrobraga/Projetos/nfefront/src/Components/NFE/TableNFE.js":"15","/home/pedrobraga/Projetos/nfefront/src/Components/ExportExcel.js":"16","/home/pedrobraga/Projetos/nfefront/src/Components/Login/AuthService.js":"17","/home/pedrobraga/Projetos/nfefront/src/Components/NFE/NFETable.js":"18","/home/pedrobraga/Projetos/nfefront/src/Components/NFE/ExportCSV.js":"19","/home/pedrobraga/Projetos/nfefront/src/actions/loginActions.js":"20"},{"size":500,"mtime":1616458865368,"results":"21","hashOfConfig":"22"},{"size":290,"mtime":1616458865368,"results":"23","hashOfConfig":"22"},{"size":362,"mtime":1616458865368,"results":"24","hashOfConfig":"22"},{"size":4701,"mtime":1616638118477,"results":"25","hashOfConfig":"22"},{"size":3897,"mtime":1616458865368,"results":"26","hashOfConfig":"22"},{"size":4868,"mtime":1616605379617,"results":"27","hashOfConfig":"22"},{"size":8151,"mtime":1616604467062,"results":"28","hashOfConfig":"22"},{"size":5816,"mtime":1616464839511,"results":"29","hashOfConfig":"22"},{"size":786,"mtime":1616605413725,"results":"30","hashOfConfig":"22"},{"size":5055,"mtime":1616607418724,"results":"31","hashOfConfig":"22"},{"size":4490,"mtime":1616607069038,"results":"32","hashOfConfig":"22"},{"size":6316,"mtime":1616465945054,"results":"33","hashOfConfig":"22"},{"size":3965,"mtime":1616605145327,"results":"34","hashOfConfig":"22"},{"size":1744,"mtime":1616638121669,"results":"35","hashOfConfig":"22"},{"size":1412,"mtime":1616458865364,"results":"36","hashOfConfig":"22"},{"size":2118,"mtime":1616458865364,"results":"37","hashOfConfig":"22"},{"size":712,"mtime":1616465945054,"results":"38","hashOfConfig":"22"},{"size":735,"mtime":1616458865364,"results":"39","hashOfConfig":"22"},{"size":836,"mtime":1616458865364,"results":"40","hashOfConfig":"22"},{"size":1507,"mtime":1616458865360,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1te541o",{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/pedrobraga/Projetos/nfefront/src/index.js",[],"/home/pedrobraga/Projetos/nfefront/src/App.js",["96"],"import React, { Component } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport AppRouter from './AppRouter';\n\n\n\n\nfunction App() {\n  return (\n    <div>\n       \n       {/*<Header />\n       <FormNFE /> */}\n\n       \n\n      <AppRouter />\n\n    </div>\n  );\n}\n\nexport default App;\n","/home/pedrobraga/Projetos/nfefront/src/reportWebVitals.js",[],"/home/pedrobraga/Projetos/nfefront/src/AppRouter.js",["97","98","99","100","101","102"],"import {  BrowserRouter as Router,Switch, Route, Redirect } from 'react-router-dom';\nimport LoginComponent from './Components/Login/LoginComponent';\nimport FormNFE from './Components/NFE/FormNFE';\nimport User from './Components/User/User';\nimport UserList from './Components/User/UserList';\nimport UserEdit from './Components/User/UserEdit';\nimport NFEList from './Components/NFE/NFEList';\nimport MenuAdmin from './Menu/MenuAdmin';\nimport NFEListAdmin from './Components/NFE/NFEListAdmin';\nimport MenuUser from './Menu/MenuUser';\n\n\nconst user = localStorage.getItem(\"username\")\nconst token = localStorage.getItem(\"token\")\nconst role = localStorage.getItem(\"role\")\n\n\nconst AppRouter = () => {\n    return(\n            <Router>\n                    <Switch>\n                        \n                        <Route path=\"/\" exact  component={LoginComponent} />\n                        <Route path=\"/nfeview\" exact component={FormNFE} />\n\n                        <Route path=\"/listusers\" exact component={UserList} />\n                        <Route path=\"/edituser/:id\" exact component={UserEdit}/>\n                        <Route path=\"/cadusers\" exact component={User} />\n                        <Route path=\"/nfelist\" exact component={NFEList} />\n                        <Route path=\"/menuuser\" exact component={MenuUser} />\n                        <Route exact path=\"/menuadmin\" exact component={MenuAdmin} />  \n                        <Route exact path=\"/nfelistadmin\" exact component={NFEListAdmin} />\n                        <Route path=\"/listusers\" exact component={UserList} />\n                                \n                                \n\n                    {/*     <Route exact path=\"/menuuser\" exact componnet={MenuUser}>\n                        { user && token  == \"USER\" && role ? <Redirect to=\"/menuuser\" />\n                                :    <LoginComponent />\n                                \n                        }  \n                         </Route>        */} \n\n        \n\n\n{/* \n\n                        </Route>\n                        <Route path=\"/nfeview\" exact component={FormNFE}>\n\n                        { user && token == \"USER\" && role ? <Redirect to=\"/nfeview\" />\n                                :    <LoginComponent />\n                                \n                        }  \n                        </Route>\n                     \n                        <Route path=\"/cadusers\" exact component={User}>\n                            { user && token == \"ADMIN\" && role ? <Redirect to=\"/cadusers\" />\n                                    :    <LoginComponent />\n                                    \n                            }  \n\n                        </Route>\n                        <Route path=\"/listusers\" exact component={UserList}>\n\n                        { user && token  == \"ADMIN\" && role ? <Redirect to=\"/listusers\" />\n                                :    <LoginComponent />\n                                \n                        }  \n\n\n                        </Route>\n\n                        <Route path=\"/edituser/:id\" exact component={UserEdit}>\n                        { user && token == \"ADMIN\" && role ? <Redirect to=\"/edituser/:id\" />\n                                :    <LoginComponent />\n                                \n                        }  \n\n                        </Route>\n                        <Route path=\"/nfelist\" exact component={NFEList}>\n\n                        { user && token == \"USER\" && role ? <Redirect to=\"/nfelist\" />\n                                :    <LoginComponent />\n                                \n                        }   \n\n                        <Route exact path=\"/menuadmin\" >  \n   \n                            { role == \"ADMIN\" ? <MenuAdmin />\n                                    :   <MenuUser />\n                                    \n                            }   \n\n                        </Route>\n\n\n   \n                        <Route exact path=\"/nfelistadmin\" >  \n   \n                            { role == \"ADMIN\" ? <NFEListAdmin />\n                                    :   <MenuUser />\n                                    \n                            }   \n\n                        </Route>\n                        \n                          <Route path=\"/nfelistadmin\" exact component={NFEListAdmin}>\n\n                          { user && role == \"ADMIN\" ? <Redirect to=\"/nfelistadmin\" />\n                                :    <LoginComponent />\n                                \n                          }  \n                        \n                        </Route>  */}\n        \n                        \n                    </Switch>\n            </Router>\n    )\n}\n\nexport default AppRouter;","/home/pedrobraga/Projetos/nfefront/src/Menu/MenuUser.js",["103","104","105","106","107","108","109"],"import Header from '../Components/Header';\nimport React,{useEffect,useState} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport AccountBoxIcon from '@material-ui/icons/AccountBox';\nimport AccountTreeIcon from '@material-ui/icons/AccountTree';\nimport FindInPageIcon from '@material-ui/icons/FindInPage';\nimport { SettingsRemoteOutlined } from '@material-ui/icons';\nimport {Link} from 'react-router-dom'; \n\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 50,\n    margin: '2 10px',\n\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '2 2px',\n    transform: 'scale(0.8)',\n    alignContent: 'center'\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n  center: {\n\n    width: '50%',\n    border: '3px solid green',\n    padding: '10px',\n  },\n});\n\nexport default function MenuUser() {\n  const classes = useStyles();\n  const bull = <span className={classes.bullet}>•</span>;\n\n  const [usuario,SetUsuario] = useState(\"\");\n  const [token,SetToken] = useState(\"\");\n  const [role,SetRole] = useState(\"\");\n      \n\n  useEffect(() => {\n      \n       let usuario = localStorage.getItem(\"username\");\n       let token = localStorage.getItem(\"token\");\n       let role = localStorage.getItem(\"role\");\n    \n        SetToken(token);\n        SetUsuario(usuario);\n        SetRole(role);\n\n      return () => {\n          //cleanup\n      }\n  }, [])  \n\n  if (token != \"\" || token == null || ! token ||\n        usuario != \"\" ||\n        role !=\"\") {\n\n    return (\n        <div>\n            <div>\n                <Header /> \n            </div>\n            <br></br>\n            <br></br>\n            \n            <div>\n                <Grid\n                container\n                direction=\"row\"\n                justify=\"center\"\n                alignItems=\"center\"\n                >\n                        <Link to={{\n                        pathname: \"/nfelist\"}}\n                    >\n                        <Card>\n                        <CardContent>\n                            <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n                            Visualização de notas\n                            </Typography>\n                        </CardContent>\n                        <CardActions>\n                            <AccountTreeIcon fontSize='large'/>\n                        </CardActions>\n                        </Card>\n                    </Link>          \n                </Grid>\n                <br></br>\n                <br></br>\n\n                <Grid\n                    container\n                    direction=\"row\"\n                    justify=\"center\"\n                    alignItems=\"center\"\n                    >\n                        <Link to={{\n                        pathname: \"/nfeview\"}}\n                    >\n\n\n                        <Card className={classes.root} variant=\"outlined\">\n                        <CardContent>\n                            <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n                            Consulta de notas na receita\n                            </Typography>\n                \n                        </CardContent>\n                        <CardActions>\n                            <FindInPageIcon fontSize='large' /> \n                        </CardActions>\n                        </Card>\n                  </Link>    \n                </Grid>\n        \n                </div>\n        </div>    \n    );\n        }\n   else {\n       return (\n       <div>\n           <h1>ACESSO NÃO AUTORIZADO</h1>\n       </div>\n       );\n   }     \n}\n","/home/pedrobraga/Projetos/nfefront/src/Menu/MenuAdmin.js",["110","111","112","113","114","115"],"import Header from '../Components/Header';\nimport React,{useEffect,useState} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport AccountBoxIcon from '@material-ui/icons/AccountBox';\nimport AccountTreeIcon from '@material-ui/icons/AccountTree';\nimport FindInPageIcon from '@material-ui/icons/FindInPage';\nimport { SettingsRemoteOutlined } from '@material-ui/icons';\nimport {Link} from 'react-router-dom'; \n\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 50,\n    margin: '2 10px',\n\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '2 2px',\n    transform: 'scale(0.8)',\n    alignContent: 'center'\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n  center: {\n\n    width: '50%',\n    border: '3px solid green',\n    padding: '10px',\n  },\n});\n\nexport default function MenuAdmin() {\n  const classes = useStyles();\n  const bull = <span className={classes.bullet}>•</span>;\n\n  const [usuario,SetUsuario] = useState(\"\");\n  const [token,SetToken] = useState(\"\");\n  const [role,SetRole] = useState(\"\");\n      \n\n  useEffect(() => {\n      \n       let usuario = localStorage.getItem(\"username\");\n       let token = localStorage.getItem(\"token\");\n       let role = localStorage.getItem(\"role\");\n    \n        SetToken(token);\n        SetUsuario(usuario);\n        SetRole(role);\n\n      return () => {\n          //cleanup\n      }\n  }, [])  \n\n  if (token != \"\" || token == null || ! token ||\n        usuario != \"\" ||\n        role !=\"\") {\n\n    return (\n        <div>\n            <div>\n                <Header /> \n            </div>\n            <br></br>\n            <br></br>\n            \n            <div>\n                <Grid\n                container\n                direction=\"row\"\n                justify=\"center\"\n                alignItems=\"center\"\n                >\n\n                    <Link to={{\n                        pathname: \"/cadusers\"}}\n                    >\n                        <Card color='pink'>\n                        <CardContent>\n                            <Typography className={classes.title} color=\"primary\" gutterBottom>\n                            Cadastro de usuários\n                            </Typography>\n                        </CardContent>\n                        <CardActions>\n                            <AccountBoxIcon fontSize='large'/>\n                        </CardActions>\n                        </Card>\n                 </Link>       \n\n                </Grid>\n                <br></br>\n                <br></br>\n                <Grid\n                container\n                direction=\"row\"\n                justify=\"center\"\n                alignItems=\"center\"\n                >\n\n                    <Link to={{\n                                        pathname: \"/listusers\"}}\n                                        >\n                            <Card>\n                            <CardContent>\n                                <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n                                Lista de usuários\n                                </Typography>\n                            </CardContent>\n                            <CardActions>\n                                <AccountTreeIcon fontSize='large'/>\n                            </CardActions>\n                            </Card>\n                    </Link>\n\n\n\n                </Grid>\n                <br></br>\n                <br></br>\n\n                <Grid\n                    container\n                    direction=\"row\"\n                    justify=\"center\"\n                    alignItems=\"center\"\n                    >\n\n                    <Link to={{\n                                        pathname: \"/nfelist\"}}\n                                        >\n                    \n                        <Card className={classes.root} variant=\"outlined\">\n                        <CardContent>\n                            <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n                            Consulta de notas\n                            </Typography>\n                \n                        </CardContent>\n                        <CardActions>\n                            <FindInPageIcon fontSize='large' /> \n                        </CardActions>\n                        </Card>\n                    </Link>        \n                </Grid>\n        \n                </div>\n        </div>    \n    );\n        }\n   else {\n       return (\n       <div>\n           <h1>ACESSO NÃO AUTORIZADO</h1>\n       </div>\n       );\n   }     \n}\n","/home/pedrobraga/Projetos/nfefront/src/Components/NFE/FormNFE.js",["116","117","118","119","120","121","122","123","124","125","126"],"import React,{useState,useEffect} from 'react';\nimport axios from 'axios';\nimport 'materialize-css';\nimport TableNFE from './TableNFE';\nimport ExportExcel from '../ExportExcel';\nimport Header from '../Header';\nimport Table from 'react-bootstrap/Table'\nimport SaveIcon from '@material-ui/icons/Save';\nimport Button from '@material-ui/core/Button';\n\n\nconst username = localStorage.getItem( \"username\");\nconst cnpj = localStorage.getItem(\"cnpj\");\n\n\nexport default function FormNFE() {\n\n//const  [cnpj,Setcnpj] =  useState(\"\");\nconst  [texto,SetTexto] = useState(\"\");\nconst  [dados,SetDados] = useState([{}]);\nconst  [notas,SetNotas] = useState([]);\n\n\n\nconst token = 'jfhsdjklfhjsdl' //localStorage.getItem('token');\nconst username = localStorage.getItem('usuario');\n\n\nuseEffect(() => {\n  \n  let vetordados = {};\n  let arraydados = [{}];\n  let ns = [];\n\n\n  if (texto != null && texto != \"\") {\n\n      for (let i=0; i < texto.length ; i++) {\n\n        let t = texto[i]\n        \n\n        let cnpjremetente = t.substring(\n            t.indexOf(\"<CNPJ>\") , \n            t.lastIndexOf(\"</CNPJ>\")\n          ).split(\">\")[1];\n\n          let chnfe = t.substring(\n            t.indexOf(\"<chNFe>\") , \n            t.lastIndexOf(\"</chNFe>\")\n          ).split(\">\")[1];\n\n          let ie = t.substring(\n              t.indexOf(\"<IE>\") , \n              t.lastIndexOf(\"</IE>\")\n            ).split(\">\")[1];\n\n\n            let nome = t.substring(\n              t.indexOf(\"<xNome>\") , \n              t.lastIndexOf(\"</xNome>\")\n              ).split(\">\")[1]//.replace(\"</xNome\",\"\");\n          \n            let dataemissao = t.substring(\n              t.indexOf(\"<dhEmi>\") , \n              t.lastIndexOf(\"</dhEmi>\")\n              ).split(\">\")[1]//.replace(\"</dhEmi\",\"\")\n             // .toLocaleDateString('pt-BR');\n          \n          \n            let valor = parseFloat(t.substring(\n                t.indexOf(\"<vNF>\") , \n                t.lastIndexOf(\"</vNF>\")\n              ).split(\">\")[1]);\n          \n              let datarecebto = t.substring(\n                t.indexOf(\"<dhRecbto>\") , \n                t.lastIndexOf(\"</dhRecbto>\")\n                ).split(\">\")[1];\n          \n              let tiponf = t.substring(\n                t.indexOf(\"<tpNF>\") , \n                t.lastIndexOf(\"</tpNF>\")\n              ).split(\">\")[1];\n\n         vetordados = {\n\n          \"cnpj\": cnpj,\n          \"chnfe\": chnfe,\n          \"ie\": ie,\n          \"tiponf\": tiponf,\n          \"nome\": nome,\n          \"valor\": valor,\n          \"dataemissao\": dataemissao,\n          \"cnpjremetente\": cnpjremetente\n        }      \n\n        arraydados.push(vetordados)\n\n\n      }\n\n    }         \n\n    SetNotas(ns);\n    SetDados(arraydados.filter((vetor) => {\n\n      return vetor.valor != null\n    }))\n  \n  return () => {\n    //\n  }\n}, [texto]) \n \nconst handleSubmit = (event) => {\n\n\n\n  event.preventDefault();\n\n  \n\n           axios.get(`/nfe/${cnpj}`)\n        .then(function (response) {\n            SetTexto(response.data);\n\n\n          })\n          .catch(function (error) {\n            console.log(error);\n            alert(error);\n          }); \n\n    }\n\n/*     const handleChange = (e) => {\n\n        Setcnpj(e.target.value);\n    }\n */\n    const SaveNfe = (e) => {\n\n        e.preventDefault()\n\n\n\n      let url =  '/cadnfe' \n      let chave = e.target.id;\n      let nf = dados.filter(nfe =>  nfe.chnfe == chave )\n        \n        //\"41201211436073000147550010001425711047416300\" ) \n\n\n        \n        axios.post(url, nf[0])\n          \n      .then((response) => {    \n              //this.props.history.push(\"http://localhost:3000/listusers\");\n      \n        })\n          .catch((err) => {\n              alert(\"Erro ao cadastrar Nfe \" + err)\n          }) \n  \n\n          e.target.disabled = true;\n\n    }\n\n\n        return (\n            <div>\n                <Header />\n\n\n               \n                <div class=\"container my-4\">\n                    <h4>Pesquisar NFE por CNPJ</h4>\n\n                    <div class=\"input-field w-25\">\n                        <form onSubmit={handleSubmit}>\n                            {/* <input type=\"text\" placeholder=\"Pesquisar por CNPJ\"  value={cnpj} onChange={handleChange} />         */}\n                            <button class=\"btn waves-effect waves-light\" type=\"submit\" >Pesquisar\n                                    <i class=\"material-icons right\">send</i>\n                            </button>\n                        </form>  \n                    </div>\n                </div>\n                <br></br>\n{/*                 <textarea value={JSON.stringify(dados)}>{dados && dados}</textarea>\n */}                <br></br>\n                <div>\n\n                <Table striped bordered hover variant=\"dark\">\n                        <thead>\n                          <tr>\n                                <th>Chave</th>\n                                <th>Data Emissão</th>\n                              {/*  <th>Número</th> */}\n                                <th>Valor</th>\n                       {/*          <th>Série</th>\n                                <th>Tipo</th> \n                                 <th>Valor</th>\n                                <th>Emitente CNPJ</th> */}\n                                <th>Emitente</th>\n                              {/*  <th>Emitente IE</th> \n                                <th>Emitente UF</th> \n                                 <th>Destinatário CNPJ</th> \n                                <th>Destinatário</th>\n                                <th>Destinarário IE</th>\n                                <th>Destinatário UF</th>\n */}                          </tr>\n                        </thead>\n                        <tbody>\n\n                            {dados &&  dados.map(\n                                  (result) => {\n                                                                  \n                                    const {\n                                      chnfe: chaveNfe,\n                                      dataemissao ,\n                                      valor,\n                                       nome: emitente\n                                                             \n                                  } = result;\n\n                                    return(\n\n                                      dados &&\n                                      <tr>\n                                        <td>{chaveNfe ? chaveNfe.replace(\"</chNFe\",\"\") : \"\"}</td>\n{/*                                         <td>{new Date(dataemissao).getDay() + \n                                          \"/\" + new Date(dataemissao).getMonth() +\n                                          \"/\" + new Date(dataemissao).getFullYear() }</td>\n */}\n                                        <td>{dataemissao ? \n                                            new Date(dataemissao).getDay() + \n                                              \"/\" + (new Date(dataemissao).getMonth()+1)  +\n                                              \"/\" + new Date(dataemissao).getFullYear() \n                                              : \"\"}</td>  \n                                        <td>{valor ? parseFloat(valor) : 0}</td> \n                                       <td>{emitente ? emitente.replace(\"</xNome\",\"\") : \"\"}</td> \n                                       {/* <td><SaveIcon id={chaveNfe} name={chaveNfe} onClick={SaveNfe}></SaveIcon></td>     \n                                    */}\n                                       <td><input type=\"button\" class=\"btn btn-info\" id={chaveNfe}  value=\"Salvar Nota\"  onClick={SaveNfe} /></td>     \n                                   \n                                      </tr>\n                                    )\n                                    \n                                  })       \n                            }\n      \n                  </tbody> \n                </Table>\n                    <div>\n                      <textarea value={texto && texto}></textarea>\n                    </div>\n                    {/* <ExportExcel dataSet={texto && texto}/>    */}\n                </div>\n            \n            </div>\n\n                          \n        )\n\n   \n        \n}    ","/home/pedrobraga/Projetos/nfefront/src/Components/Login/LoginComponent.js",["127","128","129","130","131"],"\n\n import React from 'react';\n import AppBar from '@material-ui/core/AppBar';\n import Toolbar from '@material-ui/core/Toolbar';\n import TextField from '@material-ui/core/TextField';\n import Button from '@material-ui/core/Button';\n import Typography from '@material-ui/core/Typography';\n import Container from '@material-ui/core/Container';\n import AuthService from './AuthService';\n import axios from 'axios';\n import { doLogin } from \"../../actions/loginActions\";\n import base64 from \"base-64\";\n import utf8 from \"utf8\";\n import { useHistory } from \"react-router-dom\";\n import { makeStyles } from '@material-ui/core/styles';\n \n const useStyles = makeStyles((theme) => ({\n   root: {\n     '& .MuiTextField-root': {\n       margin: theme.spacing(1),\n       width: '25ch',\n     },\n   },\n }));\n \n\n\n \n function Historico() {\n \n     const  history =  useHistory();\n     const classes = useStyles();\n \n \n }\n \n \n class LoginComponent extends React.Component {\n \n \n     constructor(props){\n         super(props);\n         this.state = {\n             username: '',\n             password: '',\n             message: '',\n         }\n         this.login = this.login.bind(this);\n     }\n \n     componentDidMount() {\n         localStorage.clear();\n \n     }\n \n \n   doLogin() {  \t\n     //this.props.dispatch(\n     //    let url =  'https://localhost:8443/api/authentication?username=' + this.state.username +  '&password=' + base64.encode(utf8.encode(this.state.password))    \n       \n     let url =  '/api/authentication?username=' + this.state.username +  '&password=' + base64.encode(utf8.encode(this.state.password))    \n       \n  \n     axios.post(url)\n            .then((response) => {    \n\n                let variavel = response.data;\n\n                let token = variavel.split(\"token:\")[1].split(\",\")[0]\n                let username = variavel.split(\"username:\")[1].split(\",\")[0]\n                let cnpj = variavel.split(\"cnpj:\")[1].split(\",\")[0]\n                let role = variavel.split(\"role:\")[1].split(\",\")[0].split('}')[0]\n\n\n                localStorage.setItem( \"token\", token );\n                localStorage.setItem( \"username\", username );\n                localStorage.setItem( \"role\", role );\n                localStorage.setItem( \"cnpj\", cnpj );\n                \n                \n                 if (role==\"ADMIN\") {\n                     this.props.history.push(\"/menuadmin\");\n                }\n                else {\n                    this.props.history.push(\"/menuuser\");\n\n                }    \n \n\n\n                \n            })\n            .catch((err) => {\n              alert('Erro na autenticação ' + err)\n            })  }\n \n      login = (e) => {\n         e.preventDefault();\n         const credentials = {username: this.state.username, password: this.state.password};\n         AuthService.login(credentials).then(res => {\n             if(res.data.status === 200){\n                 localStorage.setItem(\"userInfo\", JSON.stringify(res.data.result));\n                 this.props.history.push('/list-user');\n             }else {\n                 this.setState({message: res.data.message});\n             }\n \n             console.log(credentials)\n         });\n     }; \n  \n     onChange = (e) => { this.setState({ [e.target.name]: e.target.value}); }\n\n\n     render() {\n         return(\n             <React.Fragment>\n                 <AppBar position=\"static\">\n                     <Toolbar>\n                         <Typography variant=\"h6\" align=\"center\">\n                             NfView - Visualização de NFes\n                         </Typography>\n                     </Toolbar>\n                 </AppBar>\n                 <Container maxWidth=\"sm\">\n                     <Typography variant=\"h6\" style={styles.center}>Login</Typography>\n                     <form>\n                         <Typography variant=\"h6\" style={styles.notification}>{this.state.message}</Typography>\n                         \n {/*                         <TextField type=\"text\" label=\"USERNAME\" fullWidth margin=\"normal\" name=\"username\" value={this.state.username} onChange={this.onChange}/>\n  */}                    <div style={styles.notification}>\n                         <TextField\n                         label=\"Username\"\n                         defaultValue=\"Username\"\n                         variant=\"outlined\"\n                         name=\"username\" \n                         value={this.state.username} \n                         onChange={this.onChange}\n                         \n                         />\n                         </div>\n                         <div style={styles.notification}>\n                         <TextField\n                         type=\"password\"\n                         label=\"Password\"\n                         defaultValue=\"password\"\n                         variant=\"outlined\"\n                         name=\"password\" \n                         value={this.state.password} \n                         onChange={this.onChange}\n                         />\n                         </div>\n \n {/*                         <TextField type=\"password\" label=\"PASSWORD\" fullWidth margin=\"normal\" name=\"password\" value={this.state.password} onChange={this.onChange}/>\n  */}\n\n                        <div style={styles.notification}>\n                         <Button variant=\"contained\" color=\"secondary\" onClick={this.doLogin.bind(this)}>Login</Button>\n                         </div>\n                     </form>\n                 </Container>\n             </React.Fragment>\n         )\n     }\n \n }\n \n const styles= {\n     center :{\n         display: 'flex',\n         justifyContent: 'center'\n \n     },\n     notification: {\n         display: 'flex',\n         justifyContent: 'center',\n         color: '#dc3545',\n         margin: '10px'\n     }\n     \n }\n \n export default LoginComponent; ","/home/pedrobraga/Projetos/nfefront/src/Components/NFE/NFEList.js",["132"],"import React,{useEffect, useState} from 'react';\nimport { TablePagination } from '@material-ui/core';\nimport NFETable from './NFETable';\nimport axios from 'axios';\n\nimport Header from '../Header';\n\n\nconst cnpj = localStorage.getItem(\"cnpj\");\n\n\nexport default function NFEList() {\n\n    const [data,SetData] = useState([{}])\n\n    useEffect(() => {\n        \n\n        let url = `/nfelist/${cnpj}`;\n\n        axios.get(url)\n        .then((response) => {\n\n            SetData(response.data);\n        })\n        .catch((err) => {\n\n            alert(\"Erro ao trazer dados das nfes \" + err);\n        })\n\n\n        return () => {\n           // cleanup\n        }\n    }, [])\n\n\n\n\n\n    return (\n        <div>\n            <Header />\n            <NFETable  dados={data && data} />\n        </div>\n    )\n}\n","/home/pedrobraga/Projetos/nfefront/src/Components/User/UserEdit.js",["133","134","135","136","137","138","139","140"],"import React, {useState, useEffect} from 'react';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Header from '../Header';\nimport { useParams } from 'react-router-dom';\nimport queryString from 'query-string';\nimport axios from 'axios';\nimport { useHistory } from \"react-router-dom\";\n\n\n\nexport default function UserEdit(user) {\n\n    let history = useHistory();\n\n\n    const params = useParams();\n    const [id,SetId] = useState(\"\");\n\n    const [empresa,SetEmpresa] = useState(\"\");\n    const [password,SetPassword] = useState(\"\");\n    const [cnpj,SetCnpj] = useState(\"\");\n    const [ie,SetIe] = useState(\"\");\n    const [endereco,SetEndereco] = useState(\"\");\n    const [role,SetRole] = useState(\"USER\");\n    const [senhacert,SetSenhaCert] = useState(\"\");\n    const [username,SetUsername] = useState(\"\");\n    const [usuario,SetUsuario] = useState(null);\n    let formData = new FormData();\n\n    useEffect(() => {\n        \n        SetId(params.id)\n        let url = `/api/getuser/${params.id}`\n        axios.get(url, {\n            params: {\n              ID: params.id\n            }\n          })\n          .then(function (response) {\n       \n\n\n            SetEmpresa(response.data.empresa)\n            SetUsername(response.data.username)\n            SetCnpj(response.data.cnpj)\n            SetEndereco(response.data.endereco)\n        //    SetPassword(response.data.password)\n            SetRole(response.data.role)\n            SetIe(response.data.ie)\n            SetSenhaCert(response.data.senhacertificado)\n\n        })\n        .catch((err) => {\n            alert(\"Erro ao listar usuários \" + err)\n        })    \n       \n\n        \n        return () => {\n           // cleanup\n        }\n    }, [])\n\n\n    const onChange = (e) => {\n\n        e.preventDefault();\n\n        switch(e.target.name) {\n\n            case \"empresa\":\n                SetEmpresa(e.target.value)\n                break;\n            case \"password\":\n                SetPassword(e.target.value)\n                break;\n            case \"cnpj\":\n                SetCnpj(e.target.value)\n                break;\n            case \"ie\":\n               SetIe(e.target.value)\n                  break;              \n            case \"endereco\":\n               SetEndereco(e.target.value)\n                break;     \n            case \"senhacert\":\n                    SetSenhaCert(e.target.value)   \n                    break;   \n                         \n            default:\n                break;\n        }\n\n\n\n    }\n\n\n    const onClick = (e) => {\n\n\n         let user = {\n            empresa,\n            password,\n            role,\n            cnpj,\n            password,\n            ie,\n            endereco,\n            username:\"admin40\",\n            senhacertificado: senhacert\n        }\n\n        let url =  `/api/updateuser/${id}` \n          //+  this.state.username +  '&password=' \n          //+ base64.encode(utf8.encode(this.state.password))    \n\n        \n          axios.put(url,user)\n           .then((response) => {    \n\n                history.push(\"/listusers\");\n            })\n            .catch((err) => {\n\n                alert(\"Erro ao cadastrar usuário \" + err)\n            }) \n\n\n\n\n    }\n\n    return (\n        <div>\n            <Header />\n\n            <React.Fragment>\n  \n                <Container maxWidth=\"xs\">\n                    <Typography variant=\"h4\" style={styles.center}>Cadastro de Usuários</Typography>\n                    <form>\n                        <TextField variant=\"outlined\" type=\"text\" label=\"Empresa\" fullWidth margin=\"normal\" name=\"empresa\" value={empresa} onChange={onChange}/>\n\n                        <TextField variant=\"outlined\" type=\"password\" label=\"PASSWORD\" fullWidth margin=\"normal\" name=\"password\" value={password} onChange={onChange}/>\n                        <TextField variant=\"outlined\" type=\"text\" label=\"CNPJ\" fullWidth margin=\"normal\" name=\"cnpj\" value={cnpj} onChange={onChange}/>\n                        <TextField variant=\"outlined\" type=\"text\" label=\"IE\" fullWidth margin=\"normal\" name=\"ie\" value={ie} onChange={onChange}/>\n                        <TextField variant=\"outlined\" type=\"text\" label=\"Endereço\" fullWidth margin=\"normal\" name=\"endereco\" value={endereco} onChange={onChange}/>\n                        <TextField variant=\"outlined\" type=\"text\" label=\"Senha Certificado\" fullWidth margin=\"dense\" name=\"senhacert\" value={senhacert} onChange={onChange}/>\n\n \n                        <Button variant=\"contained\" color=\"secondary\" onClick={onClick}>Cadastrar</Button>\n             \n                    </form>\n                </Container>\n            </React.Fragment>\n  \n        \n        </div>\n    )\n}\n\n\nconst styles= {\n    center :{\n        display: 'flex',\n        justifyContent: 'center'\n\n    },\n    notification: {\n        display: 'flex',\n        justifyContent: 'center',\n        color: '#dc3545'\n    }\n}\n","/home/pedrobraga/Projetos/nfefront/src/Components/User/User.js",["141","142","143","144"],"import React, {useState} from 'react';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Header from '../Header';\nimport axios from 'axios';\nimport { FormControl } from '@material-ui/core';\nimport Box from '@material-ui/core/Box';\nimport { useHistory } from \"react-router-dom\";\n\n\nexport default function User() {\n\n    let history = useHistory();\n\n\n    const [empresa,SetEmpresa] = useState(\"\");\n    const [password,SetPassword] = useState(\"\");\n    const [cnpj,SetCnpj] = useState(\"\");\n    const [ie,SetIe] = useState(\"\");\n    const [endereco,SetEndereco] = useState(\"\");\n    const [role,SetRole] = useState(\"USER\");\n    const [senhacert,SetSenhaCert] = useState(\"\");\n    const [username,SetUsername] = useState(\"\");\n    \n//    const [arquivo,SetArquivo] = useState(undefined);\n//    let formData = new FormData();\n\n    const     onChange = (e) => {\n\n        e.preventDefault();\n\n        switch(e.target.name) {\n\n            case \"empresa\":\n                SetEmpresa(e.target.value)\n                break;\n            case \"password\":\n                SetPassword(e.target.value)\n                break;\n            case \"cnpj\":\n                SetCnpj(e.target.value)\n                break;\n            case \"ie\":\n               SetIe(e.target.value)\n                  break;           \n            case \"senhacert\":\n                SetSenhaCert(e.target.value)   \n                break;\n            case \"username\":\n                SetUsername(e.target.value)   \n                break;              \n            case \"endereco\":\n               SetEndereco(e.target.value)\n                break;                          \n            default:\n                break;\n        }\n\n    }\n\n\n    const onClick = (e) => {\n\n        e.preventDefault()\n\n         let user = {\n            empresa,\n            password,\n            role,\n            cnpj,\n            password,\n            ie,\n            endereco,\n            username:username,\n        }\n\n        let url =  '/api/caduser' \n\n        axios.post(url, user)\n        \n        .then((response) => {    \n            history.push(\"/listusers\");\n\n        })\n        .catch((err) => {\n\n            alert(\"Erro ao cadastrar usuário \" + err)\n        }) \n\n    \n\n    }\n\n    return (\n        <div>\n            <Header />\n\n            <React.Fragment>\n                <div>\n                <Container maxWidth=\"xs\">\n                    <Typography variant=\"h4\" >Cadastro de Usuários</Typography>\n                        <FormControl style={styles.center}>\n                        <TextField variant=\"outlined\" type=\"text\" label=\"Empresa\" fullWidth  size=\"small\" margin=\"dense\" name=\"empresa\" value={empresa} onChange={onChange}/>\n                        <TextField variant=\"outlined\" type=\"text\" label=\"Username\" fullWidth margin=\"dense\" name=\"username\" value={username} onChange={onChange}/>\n                        <TextField variant=\"outlined\" type=\"password\" label=\"PASSWORD\" fullWidth margin=\"dense\" name=\"password\" value={password} onChange={onChange}/>\n                        <TextField variant=\"outlined\" type=\"text\" label=\"CNPJ\" fullWidth margin=\"dense\" name=\"cnpj\" value={cnpj} onChange={onChange}/>\n                        <TextField variant=\"outlined\" type=\"text\" label=\"IE\" fullWidth margin=\"dense\" name=\"ie\" value={ie} onChange={onChange}/>\n                        <TextField variant=\"outlined\" type=\"text\" label=\"Endereço\" fullWidth margin=\"dense\" name=\"endereco\" value={endereco} onChange={onChange}/>\n                        {/* <TextField variant=\"outlined\" type=\"file\" label=\"Arquivo\" fullWidth margin=\"normal\" name=\"arquivo\" value={arquivo} onChange={onChange}/> */}\n                        <TextField variant=\"outlined\" type=\"text\" label=\"Senha Certificado\" fullWidth margin=\"dense\" name=\"senhacert\" value={senhacert} onChange={onChange}/>\n\n \n                        <Button variant=\"contained\" color=\"primary\" onClick={onClick}>Cadastrar</Button>\n                        </FormControl>\n                </Container>\n                </div>\n            </React.Fragment>\n  \n\n        </div>\n    )\n}\n\n\nconst styles= {\n    center :{\n        display: 'flex',\n        justifyContent: 'center'\n\n    },\n    notification: {\n        display: 'flex',\n        justifyContent: 'center',\n        color: '#00008B'\n    }\n}\n","/home/pedrobraga/Projetos/nfefront/src/Components/NFE/NFEListAdmin.js",["145","146","147","148","149","150","151"],"import React,{useEffect,useState, Fragment} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Header from '../Header';\nimport NFETable from './NFETable';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\nimport Button from '@material-ui/core/Button';\nimport DownloadLink from \"react-download-link\";\nimport {ExportCSV} from './ExportCSV';\n\n\n\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    selectEmpty: {\n        marginTop: theme.spacing(2),\n      },\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 200,\n  },\n}));\n\nexport default function NFEListAdmin() {\n\n    const classes = useStyles();\n    const [dataini,SetDataIni] = useState(null)\n    const [datafim,SetDataFim] = useState(null)\n    const [data,SetData] = useState([{}])\n    const [cnpj,SetCnpj] = useState(\"\")\n    const [username,SetUsername] = useState(\"\")\n    const [users,SetUsers] = useState(\"\")\n    const [nfe,SetNfe] = [{}]\n    const params = useParams();\n\n    const [selectedDate, handleDateChange] = useState(new Date());\n\n\n\n    useEffect(() => {\n\n        if (users === \"\") {\n            let url =  '/api/userslist' \n\n            axios.get(url)\n\n                .then((response) => {    \n\n                let data = response.data;\n                let dados = [{}]\n        \n                 data.forEach(obj => {\n                dados.push(obj)\n                })\n\n                SetUsers(dados);\n            \n            })\n            .catch((err) => {\n                alert(\"Erro ao listar usuários \" + err)\n            })  \n        }    \n    \n        \n\n        return () => {\n            //cleanup\n        }\n    }, [dataini,datafim,cnpj])\n\n\n   const GetNfes = (e) => {\n\n    e.preventDefault()\n\n    \n     let url = `/nfelist/${cnpj}/${dataini}/${datafim}`;\n\n\n     axios.get(url, {\n        params: {\n          cnpj,\n          dataini,\n          datafim\n        }\n      })\n    .then((response) => {\n\n        SetData(response.data);\n\n    })\n    .catch((err) => {\n\n        alert(\"Erro ao trazer dados das nfes \" + err);\n    })  \n \n   }\n    \n\n   const ExportExcel = () => {\n\n\n    let url = `/nfe/exportexcel/${cnpj}/${dataini}/${datafim}`;\n        \n      axios.get(url, {\n        params: {\n          cnpj,\n          dataini,\n          datafim\n        }\n      })\n    .then((response) => {\n\n\n        <DownloadLink\n            label=\"Save\"\n            filename={response.data}\n            exportFile={() => \"My cached data\"}\n        />\n        //SetData(response.data);\n\n    })\n    .catch((err) => {\n\n        alert(\"Erro ao trazer dados das nfes \" + err);\n    })  \n \n      \n\n\n   }\n\n    const handleChange = (e) => {\n       // setAge(event.target.value);\n\n       e.preventDefault();\n\n       switch(e.target.name) {\n\n           case \"dataini\":\n                SetDataIni(e.target.value)\n                 break;\n           case \"datafim\":\n                SetDataFim(e.target.value)\n                 break;\n           case \"cnpj\":\n\n                let username = e.target.value;  \n                let user = users.filter((e) => {\n                  return e.username === username\n                });\n                SetUsername(username)\n                //SetCnpj(JSON.stringify(user[0].cnpj).substring(1,cnpj.length-1))\n                SetCnpj(user[0].cnpj)\n                break;\n           default:\n               break;\n       }\n\n\n\n    };\n\n    return (\n        <div>\n            <div>\n                <Header />\n            </div>\n            <br></br>\n            <br></br>\n            <div>\n                    \n                <form className={classes.container} noValidate>\n\n                     <TextField\n                    name=\"dataini\"\n                    id={dataini}\n                    value={dataini}\n                    label=\"Data Inicial\"\n                    type=\"date\"\n                    format=\"dd/MM/yyyy\"\n                    defaultValue=\"24-05-2018\"\n                    onChange={handleChange}\n                    className={classes.textField}\n                    InputLabelProps={{\n                        shrink: true,\n                    }}\n                    /> \n                    <TextField\n                    name=\"datafim\"\n                    id={datafim}\n                    value={datafim}\n                    label=\"Data Final\"\n                    type=\"date\"\n                    defaultValue=\"24-05-2018\"\n                    onChange={handleChange}\n                    className={classes.textField}\n                    InputLabelProps={{\n                        shrink: true,\n                    }}\n                    />\n\n                    <Select\n                        name=\"cnpj\"\n                        value={username}\n                        onChange={handleChange}\n                        displayEmpty\n                        className={classes.selectEmpty}\n                        inputProps={{ 'aria-label': 'Without label' }}\n                    >\n                         <MenuItem value=\"\">\n                            <em>Selecionar CNPJ</em>\n                        </MenuItem>\n                        {users && users.map((user) => {\n                            return(\n                                 <MenuItem  value={user.username}>{user.username}</MenuItem>\n\n                            );   \n                        })}\n\n                        {/* <MenuItem value={20}>Twenty</MenuItem>\n                        <MenuItem value={30}>Thirty</MenuItem> */}\n                    </Select>\n\n                </form>\n                <br></br>\n                <br></br>\n                <div>\n                        <Button variant=\"contained\" color=\"default\" size='small'  onClick={GetNfes}>Listar Nfe</Button>\n                    </div>\n            </div>  \n            <div>\n                <NFETable dados={data && data} />\n            </div>\n            <div>\n            <Button variant=\"contained\" color=\"default\" size='small'  onClick={ExportExcel}>Exportar Nfes</Button>\n           </div>\n           <ExportCSV csvData={data && data} fileName={cnpj} />\n\n        </div>\n\n        )\n}\n","/home/pedrobraga/Projetos/nfefront/src/Components/User/UserList.js",["152","153","154","155","156","157","158","159","160","161","162"],"import React,{useState,useEffect} from 'react';\nimport Header from '../Header';\nimport axios from 'axios';\nimport Table from 'react-bootstrap/Table'\nimport Button from 'react-bootstrap/Button'\nimport Modal from 'react-modal';\nimport { Redirect } from 'react-router-dom'\nimport { useHistory } from 'react-router-dom';\nimport { useParams } from 'react-router-dom';\nimport TextField from '@material-ui/core/TextField';\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\n\nexport default function UserList() {\n  const { useState } = React;\n  const history = useHistory();\n\n  \n\n  const [columns, setColumns] = useState([\n    { title: 'id', field: 'id' },\n    { title: 'arquivo', field: 'arquivo'},\n    { title: 'cnpj', field: 'cnpj' },\n    { title: 'endereco', field: 'endereco'},\n    { title: 'ie', field: 'ie', width: 130 },\n    { title: 'password', field: 'password' },\n    { title: 'role', field: 'role'},\n    { title: 'salt', field: 'salt'},\n    { title: 'token', field: 'token' },\n    { title: 'empresa', field: 'empresa' }\n    \n  ]);\n\n  const [users,SetUsers] = useState(\"\");\n  const [arquivo,SetArquivo] = useState(undefined);\n\n\n  function EditUser(e) {\n\n      const cnpj = e.target.value;\n      const user = users.filter((e) => {\n        //alert(ie)  \n        return e.cnpj === cnpj\n      });\n\n      history.push(`/edituser/${JSON.stringify(user[0].id)}`) \n\n  } \n\n  function CadCert(e) {\n\n    e.preventDefault()\n\n    \n    const cnpj = e.target.name;\n      \n    const user = users.filter((e) => {\n          \n          return e.cnpj === cnpj\n        });\n\n        let formData = new FormData();\n        formData.append(\"file\",e.target.files[0],cnpj)\n        formData.append(\"id\",user[0].id);\n    let url =  `/api/caduser/file/${user[0].id}`\n        fetch(url, { \n            method: 'POST',\n            body: formData\n          }).then(\n              //response => response.json();\n              alert('')\n              )\n          .then(result => console.log('Files successfully uploaded!'))\n          .catch(error => console.log('error occurred!')); \n        \n\n\n\n  }\n\n\n   function Dados() {\n\n    {  \n       return users.map((result) =>  {\n\n        return(\n         <tr>\n            <td>{result.username} </td>\n            <td>{result.empresa} </td> \n            <td> {result.cnpj} </td> \n            <td> {result.ie}</td> \n            <td>\n            <Button variant=\"secondary\" value={result.cnpj} size=\"sm\" onClick={EditUser}>\n              Editar\n           </Button>\n           </td>\n{/*           <TextField variant=\"outlined\" type=\"file\" label=\"Arquivo\" \n               margin=\"dense\" name=\"arquivo\" value={arquivo}                        \n                 onChange={CadCert}/>  */} \n            <td>\n              <input type=\"file\" id =\"botao\" name={result.cnpj} size=\"sm\"  onChange={CadCert}>\n              </input>\n              </td>     \n\n\n\n           \n         </tr> ) \n       \n\n     })\n\n }\n\n\n\n   }\n\n  useEffect(() => {\n\n\n        let url =  '/api/userslist' \n\n        axios.get(url)\n      .then((response) => {    \n            let data = response.data;\n            let dados = [{}]\n\n\n          data.forEach(obj => {\n            dados.push(obj)\n          })\n\n          SetUsers(dados);\n            \n              })\n        .catch((err) => {\n            alert(\"Erro ao listar usuários \" + err)\n        })  \n        \n\n\n        return () => {\n            //cleanup\n        }\n    }, [])\n\n\n  return (\n\n    <div style={styles.center}>\n      <Header />\n      <br></br>\n      <br></br>\n      <br></br>\n      \n      <Table striped bordered hover variant=\"dark\" >\n      <thead>\n        <tr>\n          <th>Username</th>\n          <th>Empresa</th>\n          <th>CNPJ</th>\n          <th>IE</th>  \n        </tr>\n      </thead>\n      <tbody>\n\n        {users && Dados()}\n     </tbody> \n\n    </Table>\n\n\n\n  </div>\n\n\n  )\n}\n\n\n\nconst styles= {\n  center: {\n    //margin: 'auto',\n    width: '90%',\n    border: '3px solid green',\n  //  padding: '10px'\n  }\n  \n  \n}","/home/pedrobraga/Projetos/nfefront/src/Components/Header.js",["163","164","165","166","167","168","169","170","171"],"import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport {Link} from 'react-router-dom'; \n\n\nconst username = localStorage.getItem('username');\nconst token = localStorage.getItem('token');\nconst role = localStorage.getItem('role');\n\n\nexport default function Header() {\n\n  \n    if (role == \"ADMIN\") {\n\n      return (\n\n            <AppBar position=\"static\">\n          \n            <Toolbar>\n\n                <Link to={{\n                    pathname: \"/menuadmin\"}}\n                    >\n                <h5 style={{color:'white'}}>  Página Inicial </h5>\n                </Link>\n\n            </Toolbar>\n                <Link to={{\n                    pathname: \"/\"}}\n                    >\n                  <h5 style={{color:'white'}}>  Sair do Sistema </h5>\n                </Link>\n                  \n            </AppBar>\n          )\n\n    }\n    else {\n\n      return (\n\n        <AppBar position=\"static\">\n          \n        <Toolbar>\n\n            <Link to={{\n                    pathname: \"/menuuser\"}}\n                    >\n            <h5 style={{color:'white'}}>  Página Inicial </h5>\n            </Link>\n            <Link to={{\n                    pathname: \"/\"}}\n                    >\n                  <h5 style={{color:'white'}}>  Sair do Sistema </h5>\n                </Link>\n        </Toolbar>\n        </AppBar>\n\n\n      )\n\n    }\n\n  \n\n}\n\n\nconst styles= {\n  texto :{\n\n      color:'white'\n\n  }\n  \n  \n}  \n  ","/home/pedrobraga/Projetos/nfefront/src/Components/NFE/TableNFE.js",["172"],"import React,{useEffect} from 'react'\n\nexport default function TableNFE({ data }) {\n\n    const [result,SetResult] = {};\n\n    useEffect(() => {\n        \n        SetResult(data)\n        \n        alert(result)\n        return () => {\n           // cleanup\n        }\n    }, [])\n\n    return (\n        <div>\n                          <tr>\n                              <td>{result.chaveNfe}</td>\n                              <td>{new Date(result.dataemissao).getDay() + \n                                \"/\" + new Date(result.dataemissao).getMonth() +\n                                \"/\" + new Date(result.dataemissao).getFullYear() }</td>\n                              <td>{result.numeroprotocolo}</td>\n                              <td>{result.tipo}</td>\n                              <td>{result.valor}</td> \n                              <td>{result.status}</td> \n                              <td>{result.emitentecnpj}</td> \n                              <td>{result.emitente}</td> \n                              <td>{result.emitenteIE}</td> \n                              <td>{result.emitenteUF}</td> \n                              <td>{result.destinatario}</td> \n                              <td>{result.destinatariocnpj}</td> \n                              <td>{result.destinatarioIE}</td> \n                              <td>{result.destinatarioUF}</td> \n                          </tr>\n        </div>\n    )\n}\n","/home/pedrobraga/Projetos/nfefront/src/Components/ExportExcel.js",["173","174"],"import React from \"react\";\nimport ReactExport from \"react-data-export\";\nimport 'materialize-css';\n\nconst ExcelFile = ReactExport.ExcelFile;\nconst ExcelSheet = ReactExport.ExcelFile.ExcelSheet;\nconst ExcelColumn = ReactExport.ExcelFile.ExcelColumn;\n\n\n\n          {/*   Chave\tSPED\tEmissão\tNúmero\tSérie\tTipo\tValor\tStatus\tEmitente CNPJ\t\n            Emitente\tEmitente IE\tEmitente UF\tDestinatário CNPJ/CPF\tDestinatário\n                Destinatário IE\tDestinatário UF */}\n \nexport default function ExportExcel({dataSet}) {\n    return (\n        <div>\n            \n            <ExcelFile element={\n                          <div class=\"card-panel z-depth-2\">\n\n                        <a class=\"waves-effect waves-red waves-light btn-small\">\n                            <i class=\"material-icons left\">cloud</i>Exportar para Excel</a>\n                        </div>\n                }>\n                <ExcelSheet data={dataSet} name=\"NFEs\">\n                    <ExcelColumn label=\"Chave\"  value=\"chaveNfe\"/>\n                    <ExcelColumn label=\"Data Emissão\"  value=\"dataemissao\"/>\n                    <ExcelColumn label=\"Número Protocolo\"  value=\"numeroprotocolo\"/>\n                    <ExcelColumn label=\"Tipo\"  value=\"tipo\" /> \n                    <ExcelColumn label=\"Valor\" value=\"valor\" />\n                    <ExcelColumn label=\"Status\"  value=\"status\" />\n                    <ExcelColumn label=\"Emitente CNPJ\"  value=\"emitentecnpj\" />\n                    <ExcelColumn label=\"Emitente\"  value=\"emitente\" />\n                    <ExcelColumn label=\"Emitente IE\"  value=\"emitenteIE\" />\n                    <ExcelColumn label=\"Emitente UF\"  value=\"emitenteUF\" />\n                    <ExcelColumn label=\"Destinatário\"  value=\"destinatario\" />\n                    <ExcelColumn label=\"Destinatário CNPJ\"  value=\"destinatariocnpj\" />\n                    <ExcelColumn label=\"Destinatário IE\"  value=\"destinatarioIE\" />\n                    <ExcelColumn label=\"Destinatário UF\"  value=\"destinatarioUF\" />\n                </ExcelSheet>\n              \n              \n            </ExcelFile>\n\n\n\n\n\n\n        </div>\n    )\n}\n","/home/pedrobraga/Projetos/nfefront/src/Components/Login/AuthService.js",[],"/home/pedrobraga/Projetos/nfefront/src/Components/NFE/NFETable.js",[],"/home/pedrobraga/Projetos/nfefront/src/Components/NFE/ExportCSV.js",[],"/home/pedrobraga/Projetos/nfefront/src/actions/loginActions.js",[],{"ruleId":"175","severity":1,"message":"176","line":1,"column":17,"nodeType":"177","messageId":"178","endLine":1,"endColumn":26},{"ruleId":"175","severity":1,"message":"179","line":1,"column":50,"nodeType":"177","messageId":"178","endLine":1,"endColumn":58},{"ruleId":"175","severity":1,"message":"180","line":13,"column":7,"nodeType":"177","messageId":"178","endLine":13,"endColumn":11},{"ruleId":"175","severity":1,"message":"181","line":14,"column":7,"nodeType":"177","messageId":"178","endLine":14,"endColumn":12},{"ruleId":"175","severity":1,"message":"182","line":15,"column":7,"nodeType":"177","messageId":"178","endLine":15,"endColumn":11},{"ruleId":"183","severity":1,"message":"184","line":31,"column":56,"nodeType":"185","messageId":"186","endLine":31,"endColumn":61},{"ruleId":"183","severity":1,"message":"184","line":32,"column":59,"nodeType":"185","messageId":"186","endLine":32,"endColumn":64},{"ruleId":"175","severity":1,"message":"187","line":7,"column":8,"nodeType":"177","messageId":"178","endLine":7,"endColumn":14},{"ruleId":"175","severity":1,"message":"188","line":10,"column":8,"nodeType":"177","messageId":"178","endLine":10,"endColumn":22},{"ruleId":"175","severity":1,"message":"189","line":13,"column":10,"nodeType":"177","messageId":"178","endLine":13,"endColumn":32},{"ruleId":"175","severity":1,"message":"190","line":45,"column":9,"nodeType":"177","messageId":"178","endLine":45,"endColumn":13},{"ruleId":"191","severity":1,"message":"192","line":67,"column":13,"nodeType":"193","messageId":"194","endLine":67,"endColumn":15},{"ruleId":"191","severity":1,"message":"192","line":68,"column":17,"nodeType":"193","messageId":"194","endLine":68,"endColumn":19},{"ruleId":"191","severity":1,"message":"192","line":69,"column":14,"nodeType":"193","messageId":"194","endLine":69,"endColumn":16},{"ruleId":"175","severity":1,"message":"187","line":7,"column":8,"nodeType":"177","messageId":"178","endLine":7,"endColumn":14},{"ruleId":"175","severity":1,"message":"189","line":13,"column":10,"nodeType":"177","messageId":"178","endLine":13,"endColumn":32},{"ruleId":"175","severity":1,"message":"190","line":45,"column":9,"nodeType":"177","messageId":"178","endLine":45,"endColumn":13},{"ruleId":"191","severity":1,"message":"192","line":67,"column":13,"nodeType":"193","messageId":"194","endLine":67,"endColumn":15},{"ruleId":"191","severity":1,"message":"192","line":68,"column":17,"nodeType":"193","messageId":"194","endLine":68,"endColumn":19},{"ruleId":"191","severity":1,"message":"192","line":69,"column":14,"nodeType":"193","messageId":"194","endLine":69,"endColumn":16},{"ruleId":"175","severity":1,"message":"195","line":4,"column":8,"nodeType":"177","messageId":"178","endLine":4,"endColumn":16},{"ruleId":"175","severity":1,"message":"196","line":5,"column":8,"nodeType":"177","messageId":"178","endLine":5,"endColumn":19},{"ruleId":"175","severity":1,"message":"197","line":8,"column":8,"nodeType":"177","messageId":"178","endLine":8,"endColumn":16},{"ruleId":"175","severity":1,"message":"187","line":9,"column":8,"nodeType":"177","messageId":"178","endLine":9,"endColumn":14},{"ruleId":"175","severity":1,"message":"198","line":12,"column":7,"nodeType":"177","messageId":"178","endLine":12,"endColumn":15},{"ruleId":"175","severity":1,"message":"199","line":21,"column":9,"nodeType":"177","messageId":"178","endLine":21,"endColumn":14},{"ruleId":"175","severity":1,"message":"181","line":25,"column":7,"nodeType":"177","messageId":"178","endLine":25,"endColumn":12},{"ruleId":"175","severity":1,"message":"198","line":26,"column":7,"nodeType":"177","messageId":"178","endLine":26,"endColumn":15},{"ruleId":"191","severity":1,"message":"192","line":36,"column":30,"nodeType":"193","messageId":"194","endLine":36,"endColumn":32},{"ruleId":"175","severity":1,"message":"200","line":76,"column":19,"nodeType":"177","messageId":"178","endLine":76,"endColumn":30},{"ruleId":"191","severity":1,"message":"201","line":150,"column":47,"nodeType":"193","messageId":"194","endLine":150,"endColumn":49},{"ruleId":"175","severity":1,"message":"202","line":12,"column":11,"nodeType":"177","messageId":"178","endLine":12,"endColumn":18},{"ruleId":"175","severity":1,"message":"203","line":30,"column":11,"nodeType":"177","messageId":"178","endLine":30,"endColumn":20},{"ruleId":"175","severity":1,"message":"204","line":32,"column":13,"nodeType":"177","messageId":"178","endLine":32,"endColumn":20},{"ruleId":"175","severity":1,"message":"205","line":33,"column":12,"nodeType":"177","messageId":"178","endLine":33,"endColumn":19},{"ruleId":"191","severity":1,"message":"201","line":82,"column":26,"nodeType":"193","messageId":"194","endLine":82,"endColumn":28},{"ruleId":"175","severity":1,"message":"206","line":2,"column":10,"nodeType":"177","messageId":"178","endLine":2,"endColumn":25},{"ruleId":"175","severity":1,"message":"207","line":2,"column":8,"nodeType":"177","messageId":"178","endLine":2,"endColumn":17},{"ruleId":"175","severity":1,"message":"208","line":9,"column":8,"nodeType":"177","messageId":"178","endLine":9,"endColumn":19},{"ruleId":"175","severity":1,"message":"198","line":30,"column":12,"nodeType":"177","messageId":"178","endLine":30,"endColumn":20},{"ruleId":"175","severity":1,"message":"209","line":31,"column":12,"nodeType":"177","messageId":"178","endLine":31,"endColumn":19},{"ruleId":"175","severity":1,"message":"210","line":31,"column":20,"nodeType":"177","messageId":"178","endLine":31,"endColumn":30},{"ruleId":"175","severity":1,"message":"211","line":32,"column":9,"nodeType":"177","messageId":"178","endLine":32,"endColumn":17},{"ruleId":"212","severity":1,"message":"213","line":66,"column":8,"nodeType":"214","endLine":66,"endColumn":10,"suggestions":"215"},{"ruleId":"216","severity":1,"message":"217","line":111,"column":13,"nodeType":"218","messageId":"194","endLine":111,"endColumn":21},{"ruleId":"175","severity":1,"message":"207","line":2,"column":8,"nodeType":"177","messageId":"178","endLine":2,"endColumn":17},{"ruleId":"175","severity":1,"message":"219","line":10,"column":8,"nodeType":"177","messageId":"178","endLine":10,"endColumn":11},{"ruleId":"175","severity":1,"message":"220","line":24,"column":17,"nodeType":"177","messageId":"178","endLine":24,"endColumn":24},{"ruleId":"216","severity":1,"message":"217","line":74,"column":13,"nodeType":"218","messageId":"194","endLine":74,"endColumn":21},{"ruleId":"175","severity":1,"message":"221","line":1,"column":35,"nodeType":"177","messageId":"178","endLine":1,"endColumn":43},{"ruleId":"175","severity":1,"message":"222","line":41,"column":12,"nodeType":"177","messageId":"178","endLine":41,"endColumn":15},{"ruleId":"175","severity":1,"message":"223","line":41,"column":16,"nodeType":"177","messageId":"178","endLine":41,"endColumn":22},{"ruleId":"175","severity":1,"message":"224","line":42,"column":11,"nodeType":"177","messageId":"178","endLine":42,"endColumn":17},{"ruleId":"175","severity":1,"message":"225","line":44,"column":12,"nodeType":"177","messageId":"178","endLine":44,"endColumn":24},{"ruleId":"175","severity":1,"message":"226","line":44,"column":26,"nodeType":"177","messageId":"178","endLine":44,"endColumn":42},{"ruleId":"212","severity":1,"message":"227","line":77,"column":8,"nodeType":"214","endLine":77,"endColumn":30,"suggestions":"228"},{"ruleId":"175","severity":1,"message":"229","line":1,"column":15,"nodeType":"177","messageId":"178","endLine":1,"endColumn":23},{"ruleId":"175","severity":1,"message":"230","line":6,"column":8,"nodeType":"177","messageId":"178","endLine":6,"endColumn":13},{"ruleId":"175","severity":1,"message":"179","line":7,"column":10,"nodeType":"177","messageId":"178","endLine":7,"endColumn":18},{"ruleId":"175","severity":1,"message":"231","line":9,"column":10,"nodeType":"177","messageId":"178","endLine":9,"endColumn":19},{"ruleId":"175","severity":1,"message":"232","line":10,"column":8,"nodeType":"177","messageId":"178","endLine":10,"endColumn":17},{"ruleId":"175","severity":1,"message":"233","line":11,"column":8,"nodeType":"177","messageId":"178","endLine":11,"endColumn":22},{"ruleId":"175","severity":1,"message":"234","line":19,"column":10,"nodeType":"177","messageId":"178","endLine":19,"endColumn":17},{"ruleId":"175","severity":1,"message":"235","line":19,"column":19,"nodeType":"177","messageId":"178","endLine":19,"endColumn":29},{"ruleId":"175","severity":1,"message":"236","line":34,"column":10,"nodeType":"177","messageId":"178","endLine":34,"endColumn":17},{"ruleId":"175","severity":1,"message":"237","line":34,"column":18,"nodeType":"177","messageId":"178","endLine":34,"endColumn":28},{"ruleId":"238","severity":1,"message":"239","line":83,"column":5,"nodeType":"240","messageId":"241","endLine":113,"endColumn":3},{"ruleId":"175","severity":1,"message":"242","line":2,"column":10,"nodeType":"177","messageId":"178","endLine":2,"endColumn":20},{"ruleId":"175","severity":1,"message":"243","line":5,"column":8,"nodeType":"177","messageId":"178","endLine":5,"endColumn":18},{"ruleId":"175","severity":1,"message":"187","line":6,"column":8,"nodeType":"177","messageId":"178","endLine":6,"endColumn":14},{"ruleId":"175","severity":1,"message":"244","line":7,"column":8,"nodeType":"177","messageId":"178","endLine":7,"endColumn":18},{"ruleId":"175","severity":1,"message":"245","line":8,"column":8,"nodeType":"177","messageId":"178","endLine":8,"endColumn":16},{"ruleId":"175","severity":1,"message":"198","line":12,"column":7,"nodeType":"177","messageId":"178","endLine":12,"endColumn":15},{"ruleId":"175","severity":1,"message":"181","line":13,"column":7,"nodeType":"177","messageId":"178","endLine":13,"endColumn":12},{"ruleId":"191","severity":1,"message":"201","line":20,"column":14,"nodeType":"193","messageId":"194","endLine":20,"endColumn":16},{"ruleId":"175","severity":1,"message":"246","line":76,"column":7,"nodeType":"177","messageId":"178","endLine":76,"endColumn":13},{"ruleId":"212","severity":1,"message":"247","line":15,"column":8,"nodeType":"214","endLine":15,"endColumn":10,"suggestions":"248"},{"ruleId":"238","severity":1,"message":"249","line":11,"column":11,"nodeType":"240","messageId":"250","endLine":13,"endColumn":52},{"ruleId":"251","severity":1,"message":"252","line":22,"column":25,"nodeType":"253","endLine":22,"endColumn":81},"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'Redirect' is defined but never used.","'user' is assigned a value but never used.","'token' is assigned a value but never used.","'role' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","'Button' is defined but never used.","'AccountBoxIcon' is defined but never used.","'SettingsRemoteOutlined' is defined but never used.","'bull' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'TableNFE' is defined but never used.","'ExportExcel' is defined but never used.","'SaveIcon' is defined but never used.","'username' is assigned a value but never used.","'notas' is assigned a value but never used.","'datarecebto' is assigned a value but never used.","Expected '===' and instead saw '=='.","'doLogin' is defined but never used.","'Historico' is defined but never used.","'history' is assigned a value but never used.","'classes' is assigned a value but never used.","'TablePagination' is defined but never used.","'FormGroup' is defined but never used.","'queryString' is defined but never used.","'usuario' is assigned a value but never used.","'SetUsuario' is assigned a value but never used.","'formData' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'params.id'. Either include it or remove the dependency array.","ArrayExpression",["254"],"no-dupe-keys","Duplicate key 'password'.","ObjectExpression","'Box' is defined but never used.","'SetRole' is assigned a value but never used.","'Fragment' is defined but never used.","'nfe' is assigned a value but never used.","'SetNfe' is assigned a value but never used.","'params' is assigned a value but never used.","'selectedDate' is assigned a value but never used.","'handleDateChange' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'users'. Either include it or remove the dependency array.",["255"],"'useState' is defined but never used.","'Modal' is defined but never used.","'useParams' is defined but never used.","'TextField' is defined but never used.","'AttachFileIcon' is defined but never used.","'columns' is assigned a value but never used.","'setColumns' is assigned a value but never used.","'arquivo' is assigned a value but never used.","'SetArquivo' is assigned a value but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'makeStyles' is defined but never used.","'Typography' is defined but never used.","'IconButton' is defined but never used.","'MenuIcon' is defined but never used.","'styles' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'SetResult', 'data', and 'result'. Either include them or remove the dependency array.",["256"],"Block is redundant.","redundantBlock","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",{"desc":"257","fix":"258"},{"desc":"259","fix":"260"},{"desc":"261","fix":"262"},"Update the dependencies array to be: [params.id]",{"range":"263","text":"264"},"Update the dependencies array to be: [dataini, datafim, cnpj, users]",{"range":"265","text":"266"},"Update the dependencies array to be: [SetResult, data, result]",{"range":"267","text":"268"},[1907,1909],"[params.id]",[1894,1916],"[dataini, datafim, cnpj, users]",[269,271],"[SetResult, data, result]"]